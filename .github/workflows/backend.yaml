name: Backend CI/CD

on:
  push:
    branches:
      - master
    paths:
      - "backend/**"
  pull_request:
    branches:
      - master
    paths:
      - "backend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Launch tests
        run: echo "run npm test, after writing tests"

      - name: Create .env file with secrets
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo 'DB_URI="${{secrets.DB_URI}}"' > ./.env
          echo 'CLIENT_URL="${{secrets.CLIENT_URL}}"' >> ./.env
          echo 'JWT_SECRET="${{secrets.JWT_SECRET}}"' >> ./.env
          echo 'JWT_EXPIRES_IN="${{secrets.JWT_EXPIRES_IN}}"' >> ./.env

      - name: Login to github container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.TOKEN_GITHUB}}

      - name: Install Docker Compose
        run: sudo apt install docker-compose -y

      - name: Build Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker-compose build

      - name: Push Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name != 'pull_request' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 IP to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Authenticate docker to GHCR on remote server
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP }} "
            echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          "

      - name: Clean up old files on the server
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP }} "
            rm -rf /home/ubuntu/server &&
            mkdir -p /home/ubuntu/server/
          "

      - name: Copy docker-compose.yml to remote server
        run: scp -i ~/.ssh/id_rsa ./backend/docker-compose.yml ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/server

      - name: Deploy to remote server
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP }} "
            docker compose -f ./server/docker-compose.yml down
            docker compose -f ./server/docker-compose.yml pull
            docker compose -f ./server/docker-compose.yml up -d
            docker image prune -f
          "
